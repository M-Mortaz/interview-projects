version: '3'
services:

  escrow:
    build: .
    restart: always
    command: /bin/bash -c "/entry_point.sh"
    env_file: environments/production.env
    ports:
      - "9000:8000"
    volumes:
      - ~/EscrowSharedDir/EscrowApp/logs:/logs
      - static:/static
      - media:/media
      - socket:/socket
    depends_on:
      - db
      - redis
    links:
      - db
      - redis

  celery:
    build: .
    command: celery -A escrow worker --beat --scheduler django --loglevel=info --logfile=/logs/celery.log
    env_file: environments/production.env
    restart: always
    volumes:
      - ~/EscrowSharedDir/EscrowCelery:/logs
    links:
      - redis
      - db
    depends_on:
      - escrow
      - redis
      - db

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=ESCROW
      - POSTGRES_USER=ESCROW
      - POSTGRES_PASSWORD=ESCROW
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5544:5432"

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  nginx:
    build: ./nginx
    restart: always
    ports:
      - "80:8080"
    volumes:
      - socket:/socket
      - ~/EscrowSharedDir/nginx/logs:/var/log/nginx
      - static:/static
      - media:/media

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER:admin
      - GF_SECURITY_ADMIN_PASSWORD:admin
    depends_on:
      - db
      - redis
      - escrow
    ports:
      - "5050:3000"
    volumes:
      - grafana:/var/lib/grafana
    links:
      - db
      - redis
      - escrow

#  prometheus: # for the future => metrics
#    image: prom/prometheus:v2.36.2
#    volumes:
#      - ./prometheus/:/etc/prometheus/
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#      - '--web.console.templates=/usr/share/prometheus/consoles'
#    ports:
#      - "9090:9090"
#    restart: always

volumes:
  redis_data:
  db_data:
  socket:
  static:
  media:
  grafana:
#  prometheus_data:
