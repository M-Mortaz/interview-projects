swagger: '2.0'
info:
  title: Escrow APP
  description: Swagger doc for Escrow APP for Toman company

  version: v1
host: 127.0.0.1:8000
schemes:
  - http
  - https
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
paths:
  /token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenObtainPair'
      tags:
        - token
    parameters: []
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
        - token
    parameters: []
  /v1/files/:
    get:
      operationId: v1_files_list
      description: 'Get all file which is belong to you.'
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ProductFile'
      tags:
        - files
    post:
      operationId: v1_files_create
      description: 'Create new product file'
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductFile'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ProductFile'
      tags:
        - files
    parameters: []
  /v1/files/{id}/:
    get:
      operationId: v1_files_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProductFile'
      tags:
        - files
    delete:
      operationId: v1_files_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - files
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this product file.
        required: true
        type: string
        format: uuid
  /v1/products/:
    get:
      operationId: v1_products_list
      description: ''
      parameters:
        - name: title
          in: query
          description: ''
          required: false
          type: string
        - name: description
          in: query
          description: ''
          required: false
          type: string
        - name: created_at
          in: query
          description: ''
          required: false
          type: string
        - name: updated_at
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: ''
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Product'
      tags:
        - products
    post:
      operationId: v1_products_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
        - products
    parameters: []
  /v1/products/{id}/:
    get:
      operationId: v1_products_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
        - products
    put:
      operationId: v1_products_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
        - products
    patch:
      operationId: v1_products_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
        - products
    delete:
      operationId: v1_products_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - products
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Product.
        required: true
        type: string
        format: uuid
  /v1/users/:
    get:
      operationId: v1_users_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
        - users
    parameters: []
  /v1/users/whoami/:
    get:
      operationId: v1_users_whoami
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
        - users
    parameters: []
  /v1/users/{id}/:
    get:
      operationId: v1_users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
definitions:
  TokenObtainPair:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
      - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  ProductFile:
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      original_name:
        title: Original name
        description: Original name
        type: string
        readOnly: true
        minLength: 1
      core:
        title: Core
        type: string
        readOnly: true
        format: uri
      md5sum:
        title: Md5sum
        type: string
        readOnly: true
        minLength: 1
        x-nullable: true
      meta:
        title: Meta
        type: object
        readOnly: true
  Product:
    required:
      - title
      - description
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      files:
        type: array
        items:
          $ref: '#/definitions/ProductFile'
        readOnly: true
      images:
        type: array
        items:
          type: string
          x-nullable: true
  User:
    required:
      - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
        minLength: 1
        x-nullable: true
